# The name is descriptive for non-dev users in usds/website repo.
# For devs working in other repos, 'Deploy to GH Pages' is a better description.
name: Deploy to usds.gov

on:
  # Run automatically when a Release is published
  release:
    types: [published]

  # Allow manual run from the Actions tab on github.com
  # This is for rare, probably emergency use, probably by engineers.
  # Using it invalidates the general assumption that current deployment is a recently published release.
  workflow_dispatch:
    inputs:
      ref:
        description: 'Which commit/branch/tag do you want to deploy?'
        required: true
        type: string
  
  # Allow another Action to call this one (e.g., revert)
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve commit history
        uses: actions/checkout@v3
        with:
          # Retrieve the entire history in case an old ref is being deployed
          fetch-depth: 0
          
      - name: Checkout the branch/commit
        # This is usually redundant with previous step, but needed for ancestry refs like HEAD^
        run: git checkout ${{ inputs.ref }}
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
        with:
          ruby-version: '2.7' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
        
      # Base URL is empty string for usds/website's custom domain; for other repos it's repo name
      - name: Define base URL for Jekyll build
        run: |
          echo "${{ steps.pages.outputs.base_path }}" > /tmp/baseurl
          echo "${{ github.repository }}" > /tmp/repo; grep ^usds/website$ /tmp/repo && echo "" > /tmp/baseurl
          echo BASEURL=`cat /tmp/baseurl` >> $GITHUB_ENV 

      # _config.yml applies to all builds; _config_usds_gov.yml is for use with custom usds.gov domain
      - name: Configure Jekyll build for custom domain
        if: github.repository == 'usds/website'
        #run: cat _config_usds_gov.yml >> _config.yml
        run: echo "domain: \"https://usds.gov\"" >> _config.yml
        
      - name: Build with Jekyll; create file to identify what deployed 
          # bundle exec jekyll build --baseurl "${{ env.BASEURL }}" 
          # bundle exec jekyll build --config _config.yml 
        run: |
          bundle exec jekyll build --config _config.yml --baseurl "${{ env.BASEURL }}" 
          echo ${{ inputs.ref }} > ./_site/ref.txt; grep .*[^\s\n\r].* ./_site/ref.txt || echo $GITHUB_REF > ./_site/ref.txt
        env:
          PAGES_REPO_NWO: "${{ github.repository }}"
          JEKYLL_ENV: production
          
      - name: Store newly built files as artifact of workflow run
        uses: actions/upload-pages-artifact@v1

  mock-deploy:
    # This is an extra precaution against unintended deploys to the one production Pages space. 
    runs-on: ubuntu-latest
    if: github.repository == 'usds/website' && vars.MOCK_PAGES_DEPLOY != 'FALSE'
    needs: build
    steps:
      - name: Performing mock deploy only
        run: echo For real deploy, define MOCK_PAGES_DEPLOY=FALSE as Actions repo var under Settings/Security
    
  real-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.repository != 'usds/website' || vars.MOCK_PAGES_DEPLOY == 'FALSE'
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
